<header>
  <h1 class="index">Let's figure out where you should live</h1>

  <h1 class="index_about">Pick one thing you're most interested in:</h1>
</header>



<div class="first-container">
  <div class="categories-buttons">

  </div>

  <div class="bar-pie-charts">
    <div class="bar-chart">
      <canvas id="bar-chart" width="400" height="400"></canvas>

    </div>

    <div class="pie-chart">
      <canvas id="pie-chart" width="300" height="300"></canvas>
      <div>
      <h1 id="top-city"></h1>
      <h2 id="top-city-category-groups"></h2>
      <h2 id="top-city-all-groups"></h2>
        
      </div>
    </div>
  </div>
</div>

<div id="compare"class="second-container">
  <div class="comparison">
    <div class="comparison-text">

    </div>
    <div class="comparison-buttons">

    </div>
  </div>

  <div class="radar-chart">
    <canvas id="radar-chart" width="600" height="600"></canvas>
  </div>
</div>

<div class="third-container">
  <h1>come into my spacerocket</h1>
  <div class="map">
  <style>
  #map {
    background-color: transparent;
    /*border: 1px solid #ccc;*/
  }
  .background {
    fill: none;
    pointer-events: all;
  }
  #countries, #states {
    fill: #e0393e;
    stroke: #fff;
    stroke-linejoin: round;
    stroke-linecap: round;
  }
  #countries .active, #states .active {
    fill: #89a;
  }
  #cities {
    stroke-width: 0;
  }
  .city {
    fill: #345;
    stroke: #fff;
  }
  pre.prettyprint {
    border: 1px solid #ccc;
    margin-bottom: 0;
    padding: 9.5px;
  }
</style>

<div id="map"></div>

<script src="//d3js.org/d3.v3.min.js"></script>
<script src="//d3js.org/topojson.v1.min.js"></script>
<script>
  var m_width = $("#map").width(),
    width = 938,
    height = 500,
    country,
    state;

  var projection = d3.geo.mercator()
    .scale(150)
    .translate([width / 2, height / 1.5]);

  var path = d3.geo.path()
    .projection(projection);

  var svg = d3.select("#map").append("svg")
    .attr("preserveAspectRatio", "xMidYMid")
    .attr("viewBox", "0 0 " + width + " " + height)
    .attr("width", m_width)
    .attr("height", m_width * height / width);

    svg.append("rect")
    .attr("class", "background")
    .attr("width", width)
    .attr("height", height)
    .on("click", country_clicked);

  var g = svg.append("g");

  d3.json("/map/countries.topo.json", function(error, us) {
    g.append("g")
      .attr("id", "countries")
      .selectAll("path")
      .data(topojson.feature(us, us.objects.countries).features)
      .enter()
      .append("path")
      .attr("id", function(d) { return d.id; })
      .attr("d", path)
      .on("click", country_clicked);
  });

  d3.csv("map/cities.csv", function(error, data) {
    g.selectAll("circle")
      .data(data)
      .enter()
      .append("a")
        .attr("xlink:href", function(d) {
          return "http://www.meetup.com/cities/"+d.country+"/"+d.city;
        })
      .append("circle")
        .attr("cx", function(d) {
          return projection([d.lon, d.lat])[0];
        })
        .attr("cy", function(d) {
          return projection([d.lon, d.lat])[1];
        })
        .attr("r", 2)
        .style("fill", "black");
    });

  function zoom(xyz) {
    g.transition()
      .duration(750)
      .attr("transform", "translate(" + projection.translate() + ")scale(" + xyz[2] + ")translate(-" + xyz[0] + ",-" + xyz[1] + ")")
      .selectAll(["#countries", "#states", "#cities"])
      .style("stroke-width", 1.0 / xyz[2] + "px")
      .selectAll(".city")
      .attr("d", path.pointRadius(20.0 / xyz[2]));
    }

  function get_xyz(d) {
    var bounds = path.bounds(d);
    var w_scale = (bounds[1][0] - bounds[0][0]) / width;
    var h_scale = (bounds[1][1] - bounds[0][1]) / height;
    var z = .96 / Math.max(w_scale, h_scale);
    var x = (bounds[1][0] + bounds[0][0]) / 2;
    var y = (bounds[1][1] + bounds[0][1]) / 2 + (height / z / 6);
    return [x, y, z];
  }

  function country_clicked(d) {
    g.selectAll(["#states", "#cities"]).remove();
    state = null;
    if (country) {
      g.selectAll("#" + country.id).style('display', null);
    }
    if (d && country !== d) {
      var xyz = get_xyz(d);
      country = d;
      zoom(xyz);
    } else {
      var xyz = [width / 2, height / 1.5, 1];
      country = null;
      zoom(xyz);
    }
  }

  $(window).resize(function() {
    var w = $("#map").width();
    svg.attr("width", w);
    svg.attr("height", w * height / width);
  });
</script>

</div>
</div>
